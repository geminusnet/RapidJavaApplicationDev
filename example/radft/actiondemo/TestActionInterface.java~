package actiondemo;

import java.awt.*;
import java.awt.event.*;
import java.applet.*;
import javax.swing.*;
import imageviewerdemo.ImageViewer;

public class TestActionInterface extends javax.swing.JApplet {  
  /** Creates new form TestActionInterface */
  public TestActionInterface() {
    initComponents();
    
    // Create image icons
    ImageIcon leftImageIcon = ImageViewer.createImageIcon(
    "/image/left.gif", this);
    ImageIcon centerImageIcon = ImageViewer.createImageIcon(
    "/image/center.gif", this);
    ImageIcon rightImageIcon = ImageViewer.createImageIcon(
    "/image/right.gif", this);
    
    // Create actions
    Action leftAction = new MyAction("Left", leftImageIcon);
    Action centerAction = new MyAction("Center", centerImageIcon);
    Action rightAction = new MyAction("Right", rightImageIcon);
    
    // Add actions to the toolbar
    jToolBar1.add(leftAction);
    jToolBar1.add(centerAction);
    jToolBar1.add(rightAction);
    
    // Add actions to the buttons
    jbtLeft.addActionListener(leftAction);
    jbtCenter.addActionListener(centerAction);
    jbtRight.addActionListener(rightAction);
    
    // Add actions to the menu
    jmenuAlignment.add(leftAction);
    jmenuAlignment.add(centerAction);
    jmenuAlignment.add(rightAction);

    // Set menu bar to the applet
    setJMenuBar(jMenuBar1);
    
    // Create KeyStroke instances
    KeyStroke leftKey =
    KeyStroke.getKeyStroke(KeyEvent.VK_L, KeyEvent.CTRL_MASK);
    KeyStroke centerKey =
    KeyStroke.getKeyStroke(KeyEvent.VK_C, KeyEvent.CTRL_MASK);
    KeyStroke rightKey =
    KeyStroke.getKeyStroke(KeyEvent.VK_R, KeyEvent.CTRL_MASK);
    
    // Register keystrokes
    jPanel1.registerKeyboardAction
    (leftAction, leftKey, JComponent.WHEN_IN_FOCUSED_WINDOW);
    jPanel1.registerKeyboardAction
    (centerAction, centerKey, JComponent.WHEN_IN_FOCUSED_WINDOW);
    jPanel1.registerKeyboardAction
    (rightAction, rightKey, JComponent.WHEN_IN_FOCUSED_WINDOW);
   }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
      jMenuBar1 = new javax.swing.JMenuBar();
      jmenuAlignment = new javax.swing.JMenu();
      jToolBar1 = new javax.swing.JToolBar();
      jPanel1 = new javax.swing.JPanel();
      jbtLeft = new javax.swing.JButton();
      jbtCenter = new javax.swing.JButton();
      jbtRight = new javax.swing.JButton();
      
      jmenuAlignment.setText("Alighnment");
      jMenuBar1.add(jmenuAlignment);
      
      getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);
      
      jPanel1.add(jbtLeft);
      
      jPanel1.add(jbtCenter);
      
      jPanel1.add(jbtRight);
      
      getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    
  }//GEN-END:initComponents
    
  private class MyAction extends AbstractAction {
    String name;

    MyAction(String name, Icon icon) {
      super(name, icon);
      putValue(Action.SHORT_DESCRIPTION, name);
      this.name = name;
    }

    public void actionPerformed(ActionEvent e) {
      System.out.println("It is " + name);
    }
  }
    
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JMenu jmenuAlignment;
  private javax.swing.JToolBar jToolBar1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JButton jbtLeft;
  private javax.swing.JButton jbtCenter;
  private javax.swing.JButton jbtRight;
  // End of variables declaration//GEN-END:variables
    
}
