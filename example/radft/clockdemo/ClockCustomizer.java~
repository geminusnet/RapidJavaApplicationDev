package clockdemo;

import java.beans.*;
import java.awt.event.*;
import javax.swing.*;

public class ClockCustomizer extends java.awt.Panel implements
java.beans.Customizer, java.awt.event.ItemListener {
  // Declare a variable for notifying property change
  PropertyChangeSupport pcs = null;
  // Declare a variable for Clock
  Clock clock = null;
  
  /** Creates new form ClockCustomizer */
  public ClockCustomizer() {
    // Delete the code for invoking initComponents here.
    // initComponents() should be invoked from setObject(),
    // because setObject() must be called before initComponents.
    //    initComponents();
    // Register listeners
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jpDateStyle = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jpTimeStyle = new javax.swing.JPanel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        
        
        setLayout(new java.awt.BorderLayout());
        
        jCheckBox1.setText("jCheckBox1");
        jCheckBox1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(jCheckBox1, java.awt.BorderLayout.SOUTH);
        
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));
        
        jpDateStyle.setLayout(new java.awt.GridLayout(4, 0));
        
        jpDateStyle.setBorder(new javax.swing.border.TitledBorder("Date Style"));
        jRadioButton1.setText("FULL");
        buttonGroup1.add(jRadioButton1);
        jpDateStyle.add(jRadioButton1);
        
        jRadioButton2.setText("LONG");
        buttonGroup1.add(jRadioButton2);
        jpDateStyle.add(jRadioButton2);
        
        jRadioButton3.setText("MEDIUM");
        buttonGroup1.add(jRadioButton3);
        jpDateStyle.add(jRadioButton3);
        
        jRadioButton4.setText("SHORT");
        buttonGroup1.add(jRadioButton4);
        jpDateStyle.add(jRadioButton4);
        
        jPanel1.add(jpDateStyle);
      
      jpTimeStyle.setLayout(new java.awt.GridLayout(4, 0));
        
        jpTimeStyle.setBorder(new javax.swing.border.TitledBorder("Time Style"));
        jRadioButton5.setText("FULL");
        buttonGroup2.add(jRadioButton5);
        jpTimeStyle.add(jRadioButton5);
        
        jRadioButton6.setText("LONG");
        buttonGroup2.add(jRadioButton6);
        jpTimeStyle.add(jRadioButton6);
        
        jRadioButton7.setText("MEDIUM");
        buttonGroup2.add(jRadioButton7);
        jpTimeStyle.add(jRadioButton7);
        
        jRadioButton8.setText("SHORT");
        buttonGroup2.add(jRadioButton8);
        jpTimeStyle.add(jRadioButton8);
        
        jPanel1.add(jpTimeStyle);
      
      add(jPanel1, java.awt.BorderLayout.CENTER);
    
  }//GEN-END:initComponents
  
  public void setObject(Object bean) {
    // TODO: implement this java.beans.Customizer method;
    // initComponents is fired from here instead of the constructor 
    // because it is assumed in the Beans Spec that setObject() is 
    //called first.
    try { initComponents(); } catch (Exception e) { e.printStackTrace(); }

    jRadioButton1.addItemListener(this);
    jRadioButton2.addItemListener(this);
    jRadioButton3.addItemListener(this);
    jRadioButton4.addItemListener(this);
    jRadioButton5.addItemListener(this);
    jRadioButton6.addItemListener(this);
    jRadioButton7.addItemListener(this);
    jRadioButton8.addItemListener(this);
    jCheckBox1.addItemListener(this);
    
    if(bean instanceof Clock) {
      clock = (Clock)bean;
      
      jCheckBox1.setSelected(clock.isShowingDigitalDateTime());
      
      switch (clock.getDateStyle()) {
        case 0: jRadioButton1.setSelected(true); break;
        case 1: jRadioButton2.setSelected(true); break;
        case 2: jRadioButton3.setSelected(true); break;
        case 3: jRadioButton4.setSelected(true); break;
      }
      
      switch (clock.getTimeStyle()) {
        case 0: jRadioButton5.setSelected(true); break;
        case 1: jRadioButton6.setSelected(true); break;
        case 2: jRadioButton7.setSelected(true); break;
        case 3: jRadioButton8.setSelected(true); break;
      }
    }
  }
  
  /** Required by implementation of Customizer Interface */
  public void addPropertyChangeListener(
    PropertyChangeListener parm1) {
    if (pcs == null)
      pcs = new PropertyChangeSupport(this);
    pcs.addPropertyChangeListener(parm1);
  }

  /** Required by implementation of Customizer Interface */
  public void removePropertyChangeListener
    (PropertyChangeListener parm1) {
    if (pcs != null)
      pcs.removePropertyChangeListener(parm1);
  }

  public void itemStateChanged(ItemEvent e) {
    if (e.getSource() instanceof JCheckBox) {
      if (clock != null)
        clock.setShowingDigitalDateTime(jCheckBox1.isSelected());
      if (pcs != null)
        pcs.firePropertyChange("showingDigitalDateTime",
          new Boolean(!jCheckBox1.isSelected()),
          new Boolean(jCheckBox1.isSelected()));

      // Enable radio buttons for date style and time style
      // if showingDigitalDateTime is checked
      if (jCheckBox1.isSelected()) {
        jRadioButton1.setEnabled(true);
        jRadioButton2.setEnabled(true);
        jRadioButton3.setEnabled(true);
        jRadioButton4.setEnabled(true);
        jRadioButton5.setEnabled(true);
        jRadioButton6.setEnabled(true);
        jRadioButton7.setEnabled(true);
        jRadioButton8.setEnabled(true);
      }
      else {
        jRadioButton1.setEnabled(false);
        jRadioButton2.setEnabled(false);
        jRadioButton3.setEnabled(false);
        jRadioButton4.setEnabled(false);
        jRadioButton5.setEnabled(false);
        jRadioButton6.setEnabled(false);
        jRadioButton7.setEnabled(false);
        jRadioButton8.setEnabled(false);
      }
    }
    else { // A radio button is changed
      int currentDateStyle = clock.getDateStyle();
      int newDateStyle = currentDateStyle;

      if (jRadioButton1.isSelected())
        newDateStyle = 0;
      else if (jRadioButton2.isSelected())
        newDateStyle = 1;
      else if (jRadioButton3.isSelected())
        newDateStyle = 2;
      else if (jRadioButton4.isSelected())
        newDateStyle = 3;

      clock.setDateStyle(newDateStyle);
      if (pcs != null)
        pcs.firePropertyChange("dateStyle",
          new Integer(currentDateStyle), new Integer(newDateStyle));

      int currentTimeStyle = clock.getTimeStyle();
      int newTimeStyle = currentTimeStyle;

      if (jRadioButton5.isSelected())
        newTimeStyle = 0;
      else if (jRadioButton6.isSelected())
        newTimeStyle = 1;
      else if (jRadioButton7.isSelected())
        newTimeStyle = 2;
      else if (jRadioButton8.isSelected())
        newTimeStyle = 3;

      clock.setTimeStyle(newTimeStyle);
      if (pcs != null)
        pcs.firePropertyChange("timeStyle",
          new Integer(currentTimeStyle), new Integer(newTimeStyle));
    }
  }

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jpDateStyle;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JPanel jpTimeStyle;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    // End of variables declaration//GEN-END:variables
}