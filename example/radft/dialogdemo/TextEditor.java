package dialogdemo;

import java.io.*;
import java.awt.*;
import javax.swing.*;
import imageviewerdemo.ImageViewer;

public class TextEditor extends javax.swing.JApplet {
  JFileChooser jFileChooser1 = new JFileChooser();
  
  /** Creates new form TextEditor */
  public TextEditor() {
    initComponents();
    
    // Declare and create image icons
    ImageIcon openImageIcon = ImageViewer.createImageIcon(
      "/image/open.gif", this);
    ImageIcon saveImageIcon = ImageViewer.createImageIcon(
      "/image/save.gif", this);
    
    jmiOpen.setIcon(openImageIcon);
    jbtOpen.setIcon(openImageIcon);
    jmiSave.setIcon(saveImageIcon);
    jbtSave.setIcon(saveImageIcon);
    
    // Set current directory
    jFileChooser1.setCurrentDirectory(new File("."));
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiOpen = new javax.swing.JMenuItem();
        jmiSave = new javax.swing.JMenuItem();
        jmiClear = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jmiExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmiForeground = new javax.swing.JMenuItem();
        jmiBackground = new javax.swing.JMenuItem();
        jToolBar1 = new javax.swing.JToolBar();
        jbtOpen = new javax.swing.JButton();
        jbtSave = new javax.swing.JButton();
        jlblStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jta = new javax.swing.JTextArea();
        
        jMenu1.setText("File");
        jmiOpen.setText("Open");
        jmiOpen.addActionListener(new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jmiOpenActionPerformed(evt);
          }
        });
        
        jMenu1.add(jmiOpen);
        jmiSave.setText("Save");
        jmiSave.addActionListener(new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jmiSaveActionPerformed(evt);
          }
        });
        
        jMenu1.add(jmiSave);
        jmiClear.setText("Clear");
        jmiClear.addActionListener(new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jmiClearActionPerformed(evt);
          }
        });
        
        jMenu1.add(jmiClear);
        jMenu1.add(jSeparator1);
        jmiExit.setText("Exit");
        jmiExit.addActionListener(new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jmiExitActionPerformed(evt);
          }
        });
        
        jMenu1.add(jmiExit);
        jMenuBar1.add(jMenu1);
      jMenu2.setText("Edit");
        jmiForeground.setText("Foreground");
        jmiForeground.addActionListener(new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jmiForegroundActionPerformed(evt);
          }
        });
        
        jMenu2.add(jmiForeground);
        jmiBackground.setText("Background");
        jmiBackground.addActionListener(new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jmiBackgroundActionPerformed(evt);
          }
        });
        
        jMenu2.add(jmiBackground);
        jMenuBar1.add(jMenu2);
      
      jbtOpen.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
          jbtOpenActionPerformed(evt);
        }
      });
      
      jToolBar1.add(jbtOpen);
      
      jbtSave.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
          jbtSaveActionPerformed(evt);
        }
      });
      
      jToolBar1.add(jbtSave);
      
      getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);
      
      jlblStatus.setText("jLabel1");
      getContentPane().add(jlblStatus, java.awt.BorderLayout.SOUTH);
      
      jScrollPane1.setViewportView(jta);
      
      getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);
    
    setJMenuBar(jMenuBar1);
  }//GEN-END:initComponents

  private void jbtSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSaveActionPerformed
    save();
  }//GEN-LAST:event_jbtSaveActionPerformed

  private void jbtOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtOpenActionPerformed
    open();
  }//GEN-LAST:event_jbtOpenActionPerformed

  private void jmiBackgroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiBackgroundActionPerformed
    Color selectedColor =
      JColorChooser.showDialog(this, "Choose Background Color",
        jta.getForeground());

    if (selectedColor != null)
      jta.setBackground(selectedColor);
  }//GEN-LAST:event_jmiBackgroundActionPerformed

  private void jmiForegroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiForegroundActionPerformed
    Color selectedColor =
      JColorChooser.showDialog(this, "Choose Foreground Color",
        jta.getForeground());

    if (selectedColor != null)
      jta.setForeground(selectedColor);
  }//GEN-LAST:event_jmiForegroundActionPerformed

  private void jmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitActionPerformed
    System.exit(0);
  }//GEN-LAST:event_jmiExitActionPerformed

  private void jmiClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiClearActionPerformed
    jta.setText(null);
  }//GEN-LAST:event_jmiClearActionPerformed

  private void jmiSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSaveActionPerformed
    save();
  }//GEN-LAST:event_jmiSaveActionPerformed
    
    private void jmiOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiOpenActionPerformed
      open();
    }//GEN-LAST:event_jmiOpenActionPerformed
    
  /** Open file */
  private void open() {
    if (jFileChooser1.showOpenDialog(this) ==
      JFileChooser.APPROVE_OPTION) {
      open(jFileChooser1.getSelectedFile());
    }
  }

    /** Open file with the specified File instance */
    private void open(File file) {
      try {
        // Read from the specified file and store it in jta
        BufferedInputStream in = new BufferedInputStream(
        new FileInputStream(file));
        byte[] b = new byte[in.available()];
        in.read(b, 0, b.length);
        jta.append(new String(b, 0, b.length));
        in.close();
        
        // Display the status of the Open file operation in jlblStatus
        jlblStatus.setText(file.getName() + " Opened");
      }
      catch (IOException ex) {
        jlblStatus.setText("Error opening " + file.getName());
      }
    }
    
    /** Save file */
    private void save() {
      if (jFileChooser1.showSaveDialog(this) ==
      JFileChooser.APPROVE_OPTION) {
        save(jFileChooser1.getSelectedFile());
      }
    }
    
    /** Save file with specified File instance */
    private void save(File file) {
      try {
        // Write the text in jta to the specified file
        BufferedOutputStream out = new BufferedOutputStream(
        new FileOutputStream(file));
        byte[] b = (jta.getText()).getBytes();
        out.write(b, 0, b.length);
        out.close();
        
        // Display the status of the save file operation in jlblStatus
        jlblStatus.setText(file.getName()  + " Saved ");
      }
      catch (IOException ex) {
        jlblStatus.setText("Error saving " + file.getName());
      }
    }
    
    public static void main(String[] args) {
      TextEditor applet = new TextEditor();
      JFrame frame = new JFrame();
      frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
      frame.setTitle("TextEditor");
      frame.getContentPane().add(applet, java.awt.BorderLayout.CENTER);
      frame.setSize(400,320);
      java.awt.Dimension d =
      java.awt.Toolkit.getDefaultToolkit().getScreenSize();
      frame.setLocation((d.width - frame.getSize().width) / 2,
      (d.height - frame.getSize().height) / 2);
      frame.setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jmiOpen;
    private javax.swing.JMenuItem jmiSave;
    private javax.swing.JMenuItem jmiClear;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem jmiExit;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jmiForeground;
    private javax.swing.JMenuItem jmiBackground;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jbtOpen;
    private javax.swing.JButton jbtSave;
    private javax.swing.JLabel jlblStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jta;
    // End of variables declaration//GEN-END:variables
}